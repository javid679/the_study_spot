{"ast":null,"code":"var _jsxFileName = \"D:\\\\studyspot\\\\client\\\\src\\\\components\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\"; // Login component handles user login functionality\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // State to store user input for email and password\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\"\n  }); // State to store any error messages\n\n  const [error, setError] = useState(\"\"); // State to store user ID (if any)\n\n  const [userId, setUserId] = useState(null); // useEffect to check if user ID is stored in local storage (for session persistence)\n\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userid\");\n    setUserId(userId);\n  }, []); // handleChange updates the state as the user types in the input fields\n\n  const handleChange = _ref => {\n    let {\n      currentTarget: input\n    } = _ref;\n    setData({ ...data,\n      [input.name]: input.value\n    });\n  }; // handleSubmit is triggered when the form is submitted\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8081/api/auth\"; // Sending POST request to the server with user input data\n\n      const {\n        data: res\n      } = await axios.post(url, data); // On successful login, store tokens and user info in local storage\n\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"userid\", res.data.userid);\n      localStorage.setItem(\"username\", res.data.username);\n      localStorage.setItem(\"email\", res.data.email); // Redirect user to the HomePage\n\n      window.location = \"/HomePage\";\n    } catch (error) {\n      // Handle any errors from the server and update the error state\n      if (error.response && error.response.status >= 400 && error.response.status <= 500) {\n        setError(error.response.data.message);\n      }\n    }\n  }; // Render the login form\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.login_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.login_form_container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.form_container,\n            onSubmit: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.right,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: styles.white_btn,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"44AQmCrb8Jcri10BLoFgoM4ZgGc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/studyspot/client/src/components/Login/index.jsx"],"names":["useState","useEffect","axios","Link","styles","Login","data","setData","email","password","error","setError","userId","setUserId","localStorage","getItem","handleChange","currentTarget","input","name","value","handleSubmit","e","preventDefault","url","res","post","setItem","token","userid","username","window","location","response","status","message","login_container","login_form_container","left","form_container","right","white_btn"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\n\n// Login component handles user login functionality\nconst Login = () => {\n  // State to store user input for email and password\n  const [data, setData] = useState({ email: \"\", password: \"\" });\n  // State to store any error messages\n  const [error, setError] = useState(\"\");\n  // State to store user ID (if any)\n  const [userId, setUserId] = useState(null);\n\n  // useEffect to check if user ID is stored in local storage (for session persistence)\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userid\");\n    setUserId(userId);\n  }, []);\n\n  // handleChange updates the state as the user types in the input fields\n  const handleChange = ({ currentTarget: input }) => {\n    setData({ ...data, [input.name]: input.value });\n  };\n\n  // handleSubmit is triggered when the form is submitted\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const url = \"http://localhost:8081/api/auth\";\n      // Sending POST request to the server with user input data\n      const { data: res } = await axios.post(url, data);\n      // On successful login, store tokens and user info in local storage\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"userid\", res.data.userid);\n      localStorage.setItem(\"username\", res.data.username);\n      localStorage.setItem(\"email\", res.data.email);\n\n      // Redirect user to the HomePage\n      window.location = \"/HomePage\";\n    } catch (error) {\n      // Handle any errors from the server and update the error state\n      if (\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status <= 500\n      ) {\n        setError(error.response.data.message);\n      }\n    }\n  };\n\n  // Render the login form\n  return (\n    <>\n      <div className={styles.login_container}>\n        {/* ... (The rest of your JSX has been omitted for brevity) */}\n        {/* Form for user login */}\n        <div className={styles.login_form_container}>\n          <div className={styles.left}>\n            <form className={styles.form_container} onSubmit={handleSubmit}>\n              {/* ... (Inputs and buttons) */}\n            </form>\n          </div>\n          <div className={styles.right}>\n            {/* Link to the Signup page */}\n            <Link to=\"/signup\">\n              <button type=\"button\" className={styles.white_btn}>\n                Sign Up\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}